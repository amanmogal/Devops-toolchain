global:
  imageRegistry: gcr.io
  imagePullSecrets: []

prometheusOperator:
  admissionWebhooks:
    patch:
      image:
        registry: registry.k8s.io
        repository: ingress-nginx/kube-webhook-certgen
        tag: v1.3.0
        pullPolicy: IfNotPresent
  image:
    registry: gcr.io
    repository: google-containers/prometheus-operator
    tag: v0.50.0
  prometheusConfigReloader:
    image:
      registry: gcr.io
      repository: google-containers/prometheus-config-reloader
      tag: v0.50.0
  createCustomResource: true

prometheus:
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    retention: 15d
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    image:
      registry: gcr.io
      repository: google-containers/prometheus
      tag: v2.34.0
    resources:
      requests:
        memory: "512Mi"
        cpu: "500m"
      limits:
        memory: "1Gi"
        cpu: "1000m"

grafana:
  enabled: true
  adminPassword: prom-operator
  persistence:
    enabled: true
    size: 10Gi
  image:
    registry: gcr.io
    repository: google-containers/grafana
    tag: 8.3.3
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
  image:
    registry: gcr.io
    repository: google-containers/alertmanager
    tag: v0.23.0
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

nodeExporter:
  enabled: true
  image:
    registry: gcr.io
    repository: google-containers/node-exporter
    tag: v1.3.1
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "200m"

kubeStateMetrics:
  enabled: true
  image:
    registry: gcr.io
    repository: google-containers/kube-state-metrics
    tag: v2.3.0

serverFiles:
  prometheus.yml:
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
